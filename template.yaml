AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  DevSecOps Sentinel: An automated, AI-powered security and quality analysis platform for GitHub repositories.

Parameters:
  GitHubWebhookSecretName:
    Type: String
    Description: The name of the secret in AWS Secrets Manager that holds the GitHub webhook secret.

Globals:
  Function:
    Timeout: 60
    MemorySize: 512
    Runtime: python3.11
    Architectures:
      - x86_64

Resources:
  SentinelUtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DevSecOps-Sentinel-Utils
      Description: Shared utility functions for DevSecOps Sentinel.
      ContentUri: sentinel_utils/
      CompatibleRuntimes:
        - python3.11

  ScansTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "pull_request_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "pull_request_id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "states.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaInvokePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: 
                  - !GetAtt SecretScannerFunctionFixed.Arn
                  - !GetAtt VulnerabilityScannerFunction.Arn
                  - !GetAtt AIReviewerFunction.Arn
                  - !GetAtt AggregatorFunction.Arn

  AnalysisStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        Comment: "State machine for orchestrating DevSecOps Sentinel scans."
        StartAt: ParallelScans
        States:
          ParallelScans:
            Type: Map
            ItemsPath: "$.analysis_types"
            ResultPath: "$.scan_results"
            Next: AggregateResults
            Iterator:
              StartAt: RunScanner
              States:
                RunScanner:
                  Type: Task
                  Resource: "arn:aws:states:::lambda:invoke"
                  Parameters:
                    FunctionName.$: "$.function_name"
                    Payload.$: "$.payload"
                  End: true
          AggregateResults:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: !GetAtt AggregatorFunction.Arn
              Payload.$: "$"
            End: true
      Role: !GetAtt StateMachineRole.Arn

  SecretScannerFunctionFixed:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/secret_scanner/
      Handler: app.lambda_handler
      MemorySize: 1024  # Increased for multiple tools
      Timeout: 300  # Extended timeout for comprehensive scanning
      Layers:
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOps-Scanner-Layer:2
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOpsSentinel-Final:3
        # Uncomment when enhanced layer is available
        # - !Ref EnhancedScannerLayer
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DevSecOpsSentinel/GitHubToken-*"
          # Additional permissions for AWS integration
          - Effect: Allow
            Action:
              - "macie2:GetMacieSession"
              - "macie2:CreateClassificationJob"
              - "macie2:ListCustomDataIdentifiers"
              - "securityhub:EnableSecurityHub"
              - "securityhub:GetFindings"
              - "securityhub:BatchImportFindings"
              - "s3:CreateBucket"
              - "s3:PutBucketEncryption"
              - "s3:HeadBucket"
              - "sts:GetCallerIdentity"
            Resource: "*"
      Environment:
        Variables:
          GITHUB_TOKEN_SECRET_NAME: "DevSecOpsSentinel/GitHubToken"
          PATH: "/opt/bin:/usr/local/bin:/usr/bin:/bin"
          ENABLE_FALLBACK_DETECTION: "always"  # Changed to always for maximum coverage
          ENABLE_AWS_INTEGRATION: "false"  # Set to true to enable AWS Macie/Security Hub
          SCAN_MODE: "comprehensive"  # comprehensive | fast | balanced

  VulnerabilityScannerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/vulnerability_scanner/
      Handler: app.lambda_handler
      Layers:
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOps-Scanner-Layer:2
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOpsSentinel-Final:3
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DevSecOpsSentinel/GitHubToken-*"
      Environment:
        Variables:
          GITHUB_TOKEN_SECRET_NAME: "DevSecOpsSentinel/GitHubToken"
          PATH: "/opt/bin:/usr/local/bin:/usr/bin:/bin"

  AIReviewerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/ai_reviewer/
      Handler: app.lambda_handler
      Layers:
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOps-Scanner-Layer:2
        - arn:aws:lambda:us-east-1:390402580689:layer:DevSecOpsSentinel-Final:3
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - "bedrock:InvokeModel"
            Resource: 
              # Access to the inference profile
              - !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
              # Access to foundation models in all regions the profile uses
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-sonnet-4-20250514-v1:0"
              - !Sub "arn:aws:bedrock:*::foundation-model/anthropic.claude-sonnet-4-20250514-v1:0"
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DevSecOpsSentinel/GitHubToken-*"
      Environment:
        Variables:
          GITHUB_TOKEN_SECRET_NAME: "DevSecOpsSentinel/GitHubToken"
          BEDROCK_MODEL_ID: "us.anthropic.claude-sonnet-4-20250514-v1:0"

  AggregatorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/aggregator/
      Handler: app.lambda_handler
      Layers:
        - !Ref SentinelUtilsLayer
      MemorySize: 1024
      Timeout: 300
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref ScansTable
        - Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            # SECURITY IMPROVEMENT: Scoping down permissions to the specific secret
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DevSecOpsSentinel/GitHubToken-*"
      Environment:
        Variables:
          SCANS_TABLE_NAME: !Ref ScansTable
          # NEW: Pass the secret name to the function
          GITHUB_TOKEN_SECRET_NAME: "DevSecOpsSentinel/GitHubToken"

  WebhookHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "src/lambdas/webhook_handler/"
      Handler: app.lambda_handler
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt AnalysisStateMachine.Name
        - Statement:
            - Effect: Allow
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubWebhookSecretName}-*"
            - Effect: Allow
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DevSecOpsSentinel/GitHubToken-*"
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref AnalysisStateMachine
          SECRET_SCANNER_FUNCTION_ARN: !GetAtt SecretScannerFunctionFixed.Arn
          VULNERABILITY_SCANNER_FUNCTION_ARN: !GetAtt VulnerabilityScannerFunction.Arn
          AI_REVIEWER_FUNCTION_ARN: !GetAtt AIReviewerFunction.Arn
          GITHUB_WEBHOOK_SECRET_NAME: !Ref GitHubWebhookSecretName
          GITHUB_TOKEN_SECRET_NAME: "DevSecOpsSentinel/GitHubToken"
      Events:
        WebhookEvent:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
            RestApiId: !Ref ApiGateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod

Outputs:
  WebhookApiUrl:
    Description: "API Gateway endpoint URL for the Sentinel webhook"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/webhook"